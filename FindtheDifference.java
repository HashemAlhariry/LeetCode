//Problem Description
/*
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.



Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"


Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.

*/

import java.util.HashMap;
import java.util.Map;

public class FindtheDifference {

    public static void main(String[] args) {
        String s="a";
        String t="aa";
        findTheDifference(s,t);

    }
    public  static  char findTheDifference(String s, String t) {

        HashMap<Character,Integer> map = new HashMap<>();
        HashMap<Character,Integer> map2=new HashMap<>();
        for (int i = 0; i <s.length() ; i++) {
            if(map.containsKey(s.charAt(i))){
                map.put(s.charAt(i),map.get(s.charAt(i))+1);
            }else{
                map.put(s.charAt(i),1);
            }
        }
        for (int i = 0; i < t.length(); i++) {
            if(map2.containsKey(t.charAt(i))){
                map2.put(t.charAt(i),map2.get(t.charAt(i))+1);
            }else{
                map2.put(t.charAt(i),1);
            }
        }
        for (Map.Entry<Character,Integer> entry : map2.entrySet()){
            if(map.containsKey(entry.getKey()) && entry.getValue()==map.get(entry.getKey()))
                continue;
            return entry.getKey();

        }
    return '0';
    }

}


